{"pages":[],"posts":[{"title":"test","text":"1. 两数之和给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 你可以按任意顺序返回答案。 示例 1： 123输入：nums = [2,7,11,15], target = 9输出：[0,1]解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 示例 2： 12输入：nums = [3,2,4], target = 6输出：[1,2] 示例 3： 12输入：nums = [3,3], target = 6输出：[0,1] 提示： 2 &lt;= nums.length &lt;= 104 -109 &lt;= nums[i] &lt;= 109 -109 &lt;= target &lt;= 109 只会存在一个有效答案 1234567891011class Solution { public int[] twoSum(int[] nums, int target) { Map&lt;Integer,Integer&gt; hashtable = new HashMap&lt;Integer,Integer&gt;(); for(int i = 0;i &lt; nums.length;i++){ if(hashtable.containsKey(target - nums[i])) return new int[] {hashtable.get(target - nums[i]),i}; hashtable.put(nums[i],i); } return new int[0]; }} 12345678910111213141516171819202122232425262728//调用接口的方法import java.util.*;public class Main{ public static void main(String[] args){ int a[] = {3,2,4},target = 6; Solution s = new Solution(); int b[] = s.twoSum(a,target); for(int i = 0;i &lt; b.length;i++) System.out.println(b[i]); }}/*输出12*/class Solution{ public int[] twoSum(int[] nums,int target){ Map&lt;Integer,Integer&gt; hashtable = new HashMap&lt;Integer,Integer&gt;(); for(int i = 0;i &lt; nums.length;i++){ if(hashtable.containsKey(target - nums[i])) return new int[] {hashtable.get(target - nums[i]),i}; hashtable.put(nums[i],i); } return new int[0]; }}","link":"/2022/04/15/hello-world/"},{"title":"","text":"WallHaven(https://wallhaven.cc/) 可能需要梯子。。。","link":"/2022/04/18/%E6%89%92%E5%9B%BE%E7%BD%91%E7%AB%99WallHaven/"},{"title":"","text":"一些有趣的网站1.https://www.gushiwen.cn/ 一个关于古诗文的网站 2.https://www.allhistory.com/ 一个关于各国近现代历史的网站 3.https://h.bkzx.cn/ 中国百科全书数据库 4.https://www.mvcat.com/ 一个电影推荐网站 5.https://sou-yun.cn/PoetLifeMap. 唐宋文学编年地图 6.https://airpano.org.cn/ https://colorhub.me/ https://www.skypixel.com/ https://camarts.cn/ 几个高清图片网站 7.Painting and paintings – Gallerix online museum 关于世界名画的网站 8.Drive &amp; Listen (driveandlisten.herokuapp.com) 关于世界各国汽车驾驶视角的网站 9.中国色 － 中国传统颜色 (zhongguose.com) 关于中国配色的网站 10.太阳系|Solar System (720yun.com) 查看立体VR太阳系的网站","link":"/2022/04/21/%E4%B8%80%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/"}],"tags":[],"categories":[]}